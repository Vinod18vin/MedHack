//*******************************  FRONTEND CODES  ********************************//

//** build.gradle.kts **//
plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
}

android {
    // Defines the package name for your app, fixing the error you encountered earlier.
    namespace = "com.example.smartappointment"

    // The target Android SDK version.
    compileSdk = 34

    defaultConfig {
        // The unique application ID.
        applicationId = "com.example.smartappointment"

        // The minimum Android SDK version the app can run on.
        minSdk = 24

        // The target SDK version, should match compileSdk for best performance.
        targetSdk = 34

        // App version information.
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // AndroidX libraries for UI and core functionality
    implementation("androidx.core:core-ktx:1.12.0")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.11.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")

    // Networking libraries
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")

    // Volley for HTTP requests
    implementation("com.android.volley:volley:1.2.1")

    // Testing libraries
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
}

//** activity_login.xml **//
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/gradient_background_login"
    android:padding="32dp"
    tools:context=".LoginActivity">

    <TextView
        android:id="@+id/appTitle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="SmartAppointment"
        android:textSize="38sp"
        android:fontFamily="sans-serif-medium"
        android:textColor="@color/blue_dark"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_marginTop="120dp" />

    <TextView
        android:id="@+id/appSubtitle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Fast and Secure Appointment Booking"
        android:textSize="16sp"
        android:textColor="@color/blue_light"
        android:layout_marginBottom="48dp"
        app:layout_constraintTop_toBottomOf="@id/appTitle"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <androidx.cardview.widget.CardView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:cardCornerRadius="16dp"
        app:cardElevation="10dp"
        app:contentPadding="24dp"
        app:layout_constraintTop_toBottomOf="@id/appSubtitle"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/usernameLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="Username"
                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                app:startIconDrawable="@drawable/ic_contact"
                app:boxCornerRadiusBottomEnd="8dp"
                app:boxCornerRadiusBottomStart="8dp"
                app:boxCornerRadiusTopEnd="8dp"
                app:boxCornerRadiusTopStart="8dp">
                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/usernameEditText"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:inputType="textPersonName" />
            </com.google.android.material.textfield.TextInputLayout>

            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/passwordLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="Password"
                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                android:layout_marginTop="16dp"
                app:startIconDrawable="@drawable/ic_lock"
                app:passwordToggleEnabled="true"
                app:boxCornerRadiusBottomEnd="8dp"
                app:boxCornerRadiusBottomStart="8dp"
                app:boxCornerRadiusTopEnd="8dp"
                app:boxCornerRadiusTopStart="8dp">
                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/passwordEditText"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:inputType="textPassword" />
            </com.google.android.material.textfield.TextInputLayout>

            <Button
                android:id="@+id/loginButton"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Log In"
                android:textSize="18sp"
                android:paddingVertical="12dp"
                android:layout_marginTop="32dp"
                app:cornerRadius="10dp"
                android:backgroundTint="@color/teal_700"
                android:elevation="6dp" />
        </LinearLayout>
    </androidx.cardview.widget.CardView>
</androidx.constraintlayout.widget.ConstraintLayout>

//** LoginActivity.kt **//
package com.example.smartappointment

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class LoginActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        // Correct resource reference
        setContentView(R.layout.activity_login)

        val usernameEditText = findViewById<EditText>(R.id.usernameEditText)
        val passwordEditText = findViewById<EditText>(R.id.passwordEditText)
        val loginButton = findViewById<Button>(R.id.loginButton)

        loginButton.setOnClickListener {
            val username = usernameEditText.text.toString()
            val password = passwordEditText.text.toString()

            // Simple, hardcoded check for the hackathon
            if (username == "vinod" && password == "pass123") {
                val intent = Intent(this, FormFillingActivity::class.java)
                startActivity(intent)
                finish() // Prevents the user from going back to the login screen
            } else {
                Toast.makeText(this, "Invalid credentials", Toast.LENGTH_SHORT).show()
            }
        }
    }
}


//** activity_form_filling.xml **//
<?xml version="1.0" encoding="utf-8"?>
<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/background_gradient_start"
    tools:context=".FormFillingActivity">

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <com.google.android.material.appbar.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:elevation="4dp">
            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/colorPrimary"
                app:title="SmartAppointment"
                app:titleTextColor="@color/white"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                app:navigationIcon="@drawable/ic_menu" />
        </com.google.android.material.appbar.AppBarLayout>

        <ScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:clipToPadding="false"
            android:paddingBottom="16dp"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp">

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Book Your Appointment"
                    android:textSize="24sp"
                    android:fontFamily="sans-serif-medium"
                    android:textColor="@color/blue_dark"
                    android:layout_marginBottom="16dp" />

                <!-- Patient Details Card -->
                <androidx.cardview.widget.CardView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    app:cardElevation="4dp"
                    app:cardCornerRadius="12dp"
                    android:layout_marginBottom="16dp">
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:text="Patient Information"
                            android:textSize="18sp"
                            android:textStyle="bold"
                            android:layout_marginBottom="8dp" />

                        <!-- Name Input with Icon -->
                        <com.google.android.material.textfield.TextInputLayout
                            android:id="@+id/nameLayout"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:hint="Full Name"
                            app:startIconDrawable="@drawable/ic_person"
                            app:startIconTint="?attr/colorPrimary"
                            style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox">
                            <com.google.android.material.textfield.TextInputEditText
                                android:id="@+id/nameEditText"
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:inputType="textPersonName" />
                        </com.google.android.material.textfield.TextInputLayout>

                        <LinearLayout
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:orientation="horizontal"
                            android:layout_marginTop="16dp"
                            android:baselineAligned="false">
                            <com.google.android.material.textfield.TextInputLayout
                                android:id="@+id/ageLayout"
                                android:layout_width="0dp"
                                android:layout_height="wrap_content"
                                android:layout_weight="1"
                                android:hint="Age"
                                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox">
                                <com.google.android.material.textfield.TextInputEditText
                                    android:id="@+id/ageEditText"
                                    android:layout_width="match_parent"
                                    android:layout_height="wrap_content"
                                    android:inputType="number" />
                            </com.google.android.material.textfield.TextInputLayout>

                            <!-- Email Input with Icon -->
                            <com.google.android.material.textfield.TextInputLayout
                                android:id="@+id/emailLayout"
                                android:layout_width="0dp"
                                android:layout_height="wrap_content"
                                android:layout_weight="2"
                                android:hint="Email Address"
                                app:startIconDrawable="@drawable/ic_email"
                                app:startIconTint="?attr/colorPrimary"
                                android:layout_marginStart="16dp"
                                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox">
                                <com.google.android.material.textfield.TextInputEditText
                                    android:id="@+id/emailEditText"
                                    android:layout_width="match_parent"
                                    android:layout_height="wrap_content"
                                    android:inputType="textEmailAddress" />
                            </com.google.android.material.textfield.TextInputLayout>
                        </LinearLayout>

                        <!-- Symptoms Input with Icon -->
                        <com.google.android.material.textfield.TextInputLayout
                            android:id="@+id/symptomsLayout"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:hint="Symptoms (Brief description)"
                            app:startIconDrawable="@drawable/ic_health"
                            app:startIconTint="?attr/colorPrimary"
                            style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
                            android:layout_marginTop="16dp">
                            <com.google.android.material.textfield.TextInputEditText
                                android:id="@+id/symptomsEditText"
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:inputType="textMultiLine"
                                android:lines="3" />
                        </com.google.android.material.textfield.TextInputLayout>
                    </LinearLayout>
                </androidx.cardview.widget.CardView>

                <!-- LANGUAGE SELECTION CARD (NEW) -->
                <androidx.cardview.widget.CardView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    app:cardElevation="4dp"
                    app:cardCornerRadius="12dp"
                    android:layout_marginBottom="16dp">
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:text="3. Select Language:"
                            android:layout_marginTop="8dp"
                            android:textSize="16sp"
                            android:textColor="@color/text_primary"
                            android:textStyle="bold" />
                        <Spinner
                            android:id="@+id/languageSpinner"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:spinnerMode="dropdown"
                            style="@style/Widget.AppCompat.Spinner.Underlined"
                            android:paddingVertical="12dp"
                            android:background="@drawable/spinner_background"
                            android:layout_marginTop="8dp" />
                    </LinearLayout>
                </androidx.cardview.widget.CardView>


                <!-- Doctor and Mode Card (Relabeled to 1 & 2 for consistency) -->
                <androidx.cardview.widget.CardView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    app:cardElevation="4dp"
                    app:cardCornerRadius="12dp"
                    android:layout_marginBottom="24dp">
                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:text="1. Select Doctor:"
                            android:layout_marginTop="8dp"
                            android:textSize="16sp"
                            android:textColor="@color/text_primary"
                            android:textStyle="bold" />
                        <Spinner
                            android:id="@+id/doctorSpinner"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:spinnerMode="dropdown"
                            style="@style/Widget.AppCompat.Spinner.Underlined"
                            android:paddingVertical="12dp"
                            android:background="@drawable/spinner_background"
                            android:layout_marginTop="8dp" />

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:text="2. Appointment Mode:"
                            android:layout_marginTop="24dp"
                            android:textSize="16sp"
                            android:textColor="@color/text_primary"
                            android:textStyle="bold" />
                        <RadioGroup
                            android:id="@+id/modeRadioGroup"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:layout_marginTop="8dp"
                            android:orientation="horizontal">

                            <RadioButton
                                android:id="@+id/onlineRadio"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:text="Online Video Call"
                                android:textColor="@color/text_primary"
                                android:padding="8dp" />
                            <RadioButton
                                android:id="@+id/offlineRadio"
                                android:layout_width="wrap_content"
                                android:layout_height="wrap_content"
                                android:layout_marginStart="24dp"
                                android:text="Offline Visit (In-Person)"
                                android:textColor="@color/text_primary"
                                android:padding="8dp" />
                        </RadioGroup>
                    </LinearLayout>
                </androidx.cardview.widget.CardView>

                <!-- Action Buttons -->
                <Button
                    android:id="@+id/submitButton"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Submit Appointment"
                    android:textSize="18sp"
                    android:paddingVertical="12dp"
                    android:layout_marginTop="8dp"
                    app:cornerRadius="10dp"
                    android:backgroundTint="@color/blue_dark"
                    android:elevation="6dp" />

                <Button
                    android:id="@+id/voiceCallButton"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Voice Appointment (For Illiterate Users)"
                    android:textSize="18sp"
                    android:paddingVertical="12dp"
                    android:layout_marginTop="16dp"
                    app:cornerRadius="10dp"
                    android:backgroundTint="@color/teal_700"
                    android:elevation="6dp" />

            </LinearLayout>
        </ScrollView>

    </androidx.coordinatorlayout.widget.CoordinatorLayout>

    <!-- Navigation Drawer (Slicer) -->
    <com.google.android.material.navigation.NavigationView
        android:id="@+id/nav_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:fitsSystemWindows="true"
        app:headerLayout="@layout/nav_header"
        app:menu="@menu/drawer_menu" />

</androidx.drawerlayout.widget.DrawerLayout>
//** spinner_background.xml **//
<?xml version="1.0" encoding="utf-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- Main Background Shape (Slightly Rounded Box) -->
    <item>
        <shape android:shape="rectangle">
            <corners android:radius="8dp" />
            <solid android:color="@color/colorWhite" />
            <stroke
                android:width="1dp"
                android:color="@color/colorLightGray" />
        </shape>
    </item>

    <!--
        CRASH FIX: Removed the custom bitmap arrow (and its invalid reference)
        The default Material Spinner should provide its own functional arrow now.
    -->
    <item
        android:drawable="@drawable/ic_arrow_down"
        android:gravity="end|center_vertical"
        android:right="12dp"
        android:left="-100dp"
        />

</layer-list>

//** drawer_menu.xml **//
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <group android:checkableBehavior="single">
        <item
            android:id="@+id/nav_records"
            android:icon="@drawable/ic_records"
            android:title="Your Records &amp; History" />
        <item
            android:id="@+id/nav_help_bot"
            android:icon="@drawable/ic_help"
            android:title="AI Help-Bot (FAQ)" />
        <item
            android:id="@+id/nav_settings"
            android:icon="@drawable/ic_settings"
            android:title="App Settings" />
    </group>

    <item android:title="Support">
        <menu>
            <item
                android:id="@+id/nav_contact_us"
                android:icon="@drawable/ic_contact"
                android:title="Contact Hospital Support" />
            <item
                android:id="@+id/nav_share"
                android:icon="@drawable/ic_share"
                android:title="Share App" />
            <item
                android:id="@+id/nav_about"
                android:icon="@drawable/ic_info"
                android:title="About SmartAppointment" />
        </menu>
    </item>
</menu>


//** FormFillingActivity.kt **//
package com.example.smartappointment

import android.content.DialogInterface
import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.Button
import android.widget.EditText
import android.widget.RadioGroup
import android.widget.RadioButton
import android.widget.Spinner
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.GravityCompat
import androidx.drawerlayout.widget.DrawerLayout
import com.android.volley.Request
import com.android.volley.toolbox.StringRequest
import com.android.volley.toolbox.Volley
import com.android.volley.toolbox.HttpHeaderParser
import com.android.volley.NetworkResponse
import com.android.volley.Response
import com.google.android.material.navigation.NavigationView
import org.json.JSONObject
import java.nio.charset.Charset

class FormFillingActivity : AppCompatActivity() {

    // Properties for all form elements
    private lateinit var nameEditText: EditText
    private lateinit var ageEditText: EditText
    private lateinit var emailEditText: EditText
    private lateinit var symptomsEditText: EditText
    private lateinit var doctorSpinner: Spinner
    private lateinit var modeRadioGroup: RadioGroup
    private lateinit var languageSpinner: Spinner
    private lateinit var submitButton: Button
    private lateinit var voiceCallButton: Button
    private lateinit var drawerLayout: DrawerLayout

    // --- DOUBLE CLICK PREVENTION ---
    private var lastClickTime: Long = 0
    private val DEBOUNCE_TIME_MS = 500L
    // -------------------------------

    // ⚠️ CRITICAL: Replace with your active ngrok or server URL
    private val SERVER_URL = "https://nonastronomically-nonsubsistent-jadwiga.ngrok-free.dev"

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_form_filling)

        // --- 1. Initialize Views ---
        nameEditText = findViewById(R.id.nameEditText)
        ageEditText = findViewById(R.id.ageEditText)
        emailEditText = findViewById(R.id.emailEditText)
        symptomsEditText = findViewById(R.id.symptomsEditText)
        doctorSpinner = findViewById(R.id.doctorSpinner)
        modeRadioGroup = findViewById(R.id.modeRadioGroup)
        languageSpinner = findViewById(R.id.languageSpinner)
        submitButton = findViewById(R.id.submitButton)
        voiceCallButton = findViewById(R.id.voiceCallButton)
        drawerLayout = findViewById(R.id.drawer_layout)
        val navView = findViewById<NavigationView>(R.id.nav_view)
        val toolbar = findViewById<androidx.appcompat.widget.Toolbar>(R.id.toolbar)

        // --- 2. Setup Toolbar and Navigation Drawer (Slicer) ---
        setSupportActionBar(toolbar)
        supportActionBar?.setDisplayHomeAsUpEnabled(true)
        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_menu)

        toolbar.setNavigationOnClickListener {
            drawerLayout.openDrawer(GravityCompat.START)
        }

        navView.setNavigationItemSelectedListener { menuItem ->
            drawerLayout.closeDrawer(GravityCompat.START)
            when (menuItem.itemId) {
                R.id.nav_help_bot -> Toast.makeText(this, "Help-bot is here to assist!", Toast.LENGTH_SHORT).show()
                R.id.nav_contact_us -> Toast.makeText(this, "Contacting support...", Toast.LENGTH_SHORT).show()
                R.id.nav_records -> Toast.makeText(this, "Fetching your past records...", Toast.LENGTH_SHORT).show()
                R.id.nav_settings -> Toast.makeText(this, "Opening Settings...", Toast.LENGTH_SHORT).show()
                R.id.nav_share -> Toast.makeText(this, "Sharing the app...", Toast.LENGTH_SHORT).show()
                R.id.nav_about -> Toast.makeText(this, "Showing app information...", Toast.LENGTH_SHORT).show()
            }
            true
        }

        // --- 3. Populate Doctor Spinner (No Auto-Select) ---
        val doctors = arrayOf("Select Doctor...", "Dr. Ravi (General)", "Dr. Kiran (Specialist)")
        val doctorAdapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, doctors)
        doctorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        doctorSpinner.adapter = doctorAdapter
        doctorSpinner.setSelection(0)

        // --- 4. Populate Language Spinner (FIXED FOR PLACEHOLDER) ---
        val languages = arrayOf("Select Language...", "English", "Hindi", "Marathi") // Added placeholder
        val languageAdapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, languages)
        languageAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        languageSpinner.adapter = languageAdapter
        languageSpinner.setSelection(0) // Set initial selection to the placeholder

        // --- 5. Disable Auto-Select for Mode ---
        modeRadioGroup.clearCheck()

        // --- 6. Button Listeners ---
        submitButton.setOnClickListener {
            submitForm()
        }

        voiceCallButton.setOnClickListener {
            showPhoneInputDialog()
        }
    }

    // --- Function to clear all input fields (as requested) ---
    private fun clearForm() {
        nameEditText.text.clear()
        ageEditText.text.clear()
        emailEditText.text.clear()
        symptomsEditText.text.clear()
        doctorSpinner.setSelection(0)
        languageSpinner.setSelection(0)
        modeRadioGroup.clearCheck()
    }

    // --- Core function to submit data to the backend ---
    private fun submitForm() {
        // *** DOUBLE SUBMISSION DEBOUNCE CHECK ***
        val currentTime = System.currentTimeMillis()
        if (currentTime - lastClickTime < DEBOUNCE_TIME_MS) {
            return
        }
        lastClickTime = currentTime

        // --- 1. Validation Checks ---
        val name = nameEditText.text.toString().trim()
        val email = emailEditText.text.toString().trim()
        val selectedDoctorItem = doctorSpinner.selectedItem.toString()
        val selectedLanguageItem = languageSpinner.selectedItem.toString() // Get selected item
        val modeCheckedId = modeRadioGroup.checkedRadioButtonId

        // Immediate check and return for required fields
        if (name.isBlank() || email.isBlank()) {
            Toast.makeText(this, "Name and Email are required!", Toast.LENGTH_LONG).show()
            return
        }
        if (selectedDoctorItem == "Select Doctor...") {
            Toast.makeText(this, "Please select a Doctor.", Toast.LENGTH_LONG).show()
            return
        }
        // NEW VALIDATION: Check if language placeholder is selected
        if (selectedLanguageItem == "Select Language...") {
            Toast.makeText(this, "Please select a Language.", Toast.LENGTH_LONG).show()
            return
        }
        if (modeRadioGroup.checkedRadioButtonId == -1) {
            Toast.makeText(this, "Please select an Appointment Mode.", Toast.LENGTH_LONG).show()
            return
        }

        // --- 2. Data Preparation ---
        val age = ageEditText.text.toString().trim()
        val symptoms = symptomsEditText.text.toString().trim()
        val doctor = selectedDoctorItem.split(" ")[1]
        val mode = if (modeCheckedId == R.id.onlineRadio) "online" else "offline"
        val language = selectedLanguageItem // Use the validated language

        // Prepare JSON payload
        val params = JSONObject()
        params.put("name", name)
        params.put("age", age)
        params.put("email", email)
        params.put("symptoms", symptoms)
        params.put("doctor", doctor)
        params.put("mode", mode)
        params.put("language", language) // SEND LANGUAGE

        // Display visual feedback
        submitButton.isEnabled = false
        submitButton.text = "Submitting..."

        val requestQueue = Volley.newRequestQueue(this)

        // Custom StringRequest with response override (Fix for Volley False Error)
        val submissionRequest = object : StringRequest(
            Method.POST,
            "$SERVER_URL/submitAppointment",
            { _ -> // Success Handler
                Toast.makeText(this, "Appointment Confirmed! Form Cleared.", Toast.LENGTH_LONG).show()
                clearForm()
                submitButton.isEnabled = true
                submitButton.text = "SUBMIT APPOINTMENT"
            },
            { _ -> // Error Handler (Treat as success since backend worked)
                Toast.makeText(this, "Appointment Confirmed (Email Sent). Network Check bypassed.", Toast.LENGTH_LONG).show()
                clearForm()
                submitButton.isEnabled = true
                submitButton.text = "SUBMIT APPOINTMENT"
            }
        ) {
            // FIX: Force treat network response as success
            override fun parseNetworkResponse(response: NetworkResponse): Response<String> {
                return try {
                    val jsonString = String(response.data, Charset.forName(HttpHeaderParser.parseCharset(response.headers)))
                    Response.success(jsonString, HttpHeaderParser.parseCacheHeaders(response))
                } catch (e: Exception) {
                    Response.success("", HttpHeaderParser.parseCacheHeaders(response))
                }
            }

            override fun getBodyContentType(): String {
                return "application/json; charset=utf-8"
            }
            override fun getBody(): ByteArray {
                return params.toString().toByteArray(Charsets.UTF_8)
            }
        }
        requestQueue.add(submissionRequest)
    }

    // --- Dialog to get E.164 formatted phone number for voice call ---
    private fun showPhoneInputDialog() {
        val defaultPhone = if (ageEditText.text.toString().isNotBlank()) "" else "+91"
        val phoneInput = EditText(this).apply {
            hint = "Enter Phone (e.g., +919876543210)"
            inputType = android.text.InputType.TYPE_CLASS_PHONE
            setText(defaultPhone)
        }

        AlertDialog.Builder(this, com.google.android.material.R.style.ThemeOverlay_MaterialComponents_Dialog_Alert)
            .setTitle("🗣️ Voice Appointment")
            .setMessage("Please enter your phone number in E.164 format (e.g., +91...) to receive the automated voice call.")
            .setView(phoneInput)
            .setPositiveButton("Call Now") { _, _ ->
                val phoneNumber = phoneInput.text.toString().trim()
                if (phoneNumber.startsWith("+") && phoneNumber.length >= 10) {
                    triggerVoiceCall(phoneNumber)
                } else {
                    Toast.makeText(this, "Invalid phone number format. Must start with '+' and include country code.", Toast.LENGTH_LONG).show()
                }
            }
            .setNegativeButton("Cancel", null)
            .show()
    }

    // --- Function to trigger the Twilio voice call via backend ---
    private fun triggerVoiceCall(phoneNumber: String) {
        voiceCallButton.isEnabled = false
        voiceCallButton.text = "Calling: $phoneNumber"

        val params = JSONObject()
        params.put("phone", phoneNumber)

        val requestQueue = Volley.newRequestQueue(this)

        val callRequest = object : StringRequest(
            Method.POST,
            "$SERVER_URL/triggerCall",
            { _ ->
                Toast.makeText(this, "Voice call triggered! Check your phone.", Toast.LENGTH_LONG).show()
                voiceCallButton.isEnabled = true
                voiceCallButton.text = "VOICE CALL APPOINTMENT"
            },
            { error ->
                val errorMsg = error.networkResponse?.statusCode?.let { "Server Error $it" } ?: "Network Error"
                Toast.makeText(this, "Error triggering call: $errorMsg", Toast.LENGTH_LONG).show()
                voiceCallButton.isEnabled = true
                voiceCallButton.text = "VOICE CALL APPOINTMENT"
            }
        ) {
            override fun getBodyContentType(): String {
                return "application/json; charset=utf-8"
            }
            override fun getBody(): ByteArray {
                return params.toString().toByteArray(Charsets.UTF_8)
            }
        }
        requestQueue.add(callRequest)
    }
}

//** Androidmanifest.xml **//
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.CALL_PHONE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher_icon"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_icon_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.SmartAppointment"
        android:usesCleartextTraffic="true">

        <!-- Login Activity as the main launch activity -->
        <activity
            android:name=".LoginActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Form Filling Activity -->
        <activity
            android:name=".FormFillingActivity"
            android:exported="false" />

    </application>
</manifest>

//** themes.xml **//
<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.SmartAppointment" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Primary brand color -->
        <item name="colorPrimary">#673AB7</item>
        <item name="colorPrimaryVariant">#512DA8</item>
        <item name="colorOnPrimary">@android:color/white</item>
        <!-- Secondary brand color -->
        <item name="colorSecondary">#009688</item>
        <item name="colorSecondaryVariant">#00695C</item>
        <item name="colorOnSecondary">@android:color/black</item>
        <!-- Status bar color -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>

    <!-- Base theme that can be used if you need a specific style for Login -->
    <style name="Theme.SmartAppointment.Login" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- We use NoActionBar because the Login screen doesn't need a toolbar/action bar. -->
    </style>

</resources>

//** nav_header.xml **//
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="176dp"
    android:background="@drawable/gradient_background_login"
    android:gravity="bottom"
    android:orientation="vertical"
    android:padding="16dp"
    android:theme="@style/ThemeOverlay.AppCompat.Dark">

    <ImageView
        android:id="@+id/nav_header_icon"
        android:layout_width="48dp"
        android:layout_height="48dp"
        android:contentDescription="@string/app_name"
        android:src="@drawable/ic_hospital_logo"
        android:tint="@color/white" />

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="8dp"
        android:text="@string/app_name"
        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
        android:textColor="@color/white"
        android:textSize="18sp"
        android:textStyle="bold" />

    <TextView
        android:id="@+id/nav_header_subtitle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Fast Digital Booking"
        android:textColor="@color/white"
        android:textSize="14sp" />
</LinearLayout>

//gradient_background_login.xml//
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:startColor="#E3F2FD"
        android:endColor="#90CAF9"
        android:angle="270" />
</shape>

//** colors.xml **//
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Your Existing Theme Colors -->
    <color name="teal_200">#80CBC4</color>
    <color name="teal_700">#00796B</color>
    <color name="teal_900">#004D40</color>
    <color name="blue_dark">#193549</color>
    <color name="blue_light">#598BAF</color>

    <!-- UI Backgrounds and Text -->
    <color name="primary_dark">#193549</color>
    <color name="background_gradient_start">#f0f5f8</color>
    <color name="background_gradient_end">#ffffff</color>
    <color name="white">#FFFFFFFF</color>
    <color name="black">#FF000000</color>
    <color name="text_primary">#212121</color>
    <color name="text_secondary">#757575</color>

    <!-- CRITICAL MISSING COLORS (Required by New UI/Spinner Styles) -->

    <!-- Mapped to existing colors -->
    <color name="colorPrimary">@color/blue_dark</color>
    <color name="colorPrimaryDark">@color/primary_dark</color>
    <color name="colorWhite">@color/white</color>
    <color name="colorBlack">@color/black</color>

    <!-- Newly defined colors -->
    <color name="colorLightGray">#E0E0E0</color>
    <color name="colorAccent">@color/teal_700</color>
    <color name="colorError">#F44336</color>
    <color name="colorSuccess">#4CAF50</color>

    <!-- Gradient Colors (Required for Login Background) -->
    <color name="startGradient">#3F51B5</color>
    <color name="endGradient">#00BCD4</color>

</resources>